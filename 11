Brightness:
 - I_out = (1-t) * I_dontwant + t*I_in
 - I_dontwant = vec3( 0., 0., 0. );

Contrast:
 - darkers getting darker, lighterss getting lighter
 - I_dontwant = vec3( 0.5, 0.5, 0.5 );

Saturation;
 - maintain the intensity but lose the color is gray scale
 - in saturation we need to emphesize the colors

 -i_dontwant = vec3( luminance, luminance, luminance );
  - Luminance = 0.2125*Red + 0.7154*Green + 0.0721*Blue

Difference:
 - I_dontwant = I_before
 - I_in = I_after

ChromaKey:
 - replacing one color with a pattern (wheather man effect)
 - Replace fragment if:
  - R < T
  - G < T
  - B > 1.-T

Blur and sharpness:

       1   |1 2 1|
B =  ____  |2 4 2|
           |1 2 1|
      16

- Idontwant = Iblur

vec2 stp0 = vec2(1./ResS, 0. );
vec2 st0p = vec2(0. , 1./ResT);
vec2 stpp = vec2(1./ResS, 1./ResT);
vec2 stpm = vec2(1./ResS, -1./ResT);
vec3 i00 = texture2D( uImageUnit, vST ).rgb;
vec3 im1m1 = texture2D( uImageUnit, vST-stpp ).rgb;
vec3 ip1p1 = texture2D( uImageUnit, vST+stpp ).rgb;
vec3 im1p1 = texture2D( uImageUnit, vST-stpm ).rgb;
vec3 ip1m1 = texture2D( uImageUnit, vST+stpm ).rgb;
vec3 im10 = texture2D( uImageUnit, vST-stp0 ).rgb;
vec3 ip10 = texture2D( uImageUnit, vST+stp0 ).rgb;
vec3 i0m1 = texture2D( uImageUnit, vST-st0p ).rgb;
vec3 i0p1 = texture2D( uImageUnit, vST+st0p ).rgb;
vec3 target = vec3(0.,0.,0.);
target += 1.*(im1m1+ip1m1+ip1p1+im1p1);
target += 2.*(im10+ip10+i0m1+i0p1);
target += 4.*(i00);
target /= 16.;
gl_FragColor= vec4( mix( target, irgb, T ), 1. );

